name: Build wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels:
    name: ${{ matrix.os }}, Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python: ["cp37", "cp38", "cp39", "cp310"]
        os: [ubuntu-20.04]
    env:
      BUILD_COMMIT: "v4.25"  # main or a specific version, e.g., v4.25
      PYPI_UPLOAD: true  # true or false
      TESTPYPI_UPLOAD: false
      CIBW_BUILD: ${{ matrix.python }}-*
      CIBW_ARCHS_LINUX: "aarch64"
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      # No support for pypy, musl, Win32 for 3.10+
      CIBW_SKIP: "pp* *-musllinux_x86_64 cp310-win32 *-musllinux_aarch64"
      CIBW_TEST_REQUIRES: pytest pytest-xdist
      CIBW_TEST_SKIP: "*-*linux_aarch64"
      CIBW_TEST_COMMAND: python -c "import linearmodels; linearmodels.test(['-n','2','--skip-slow'])"
      CIBW_REPAIR_WHEEL_COMMAND_LINUX: 'auditwheel repair --strip -w {dest_dir} {wheel}'
      MKL_NUM_THREADS: 1
      OMP_NUM_THREADS: 1
      OPENLAS_NUM_THREADS: 1

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - uses: docker/setup-qemu-action@v1
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        name: Set up QEMU

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.3.1

      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse linearmodels
        env:
          CIBW_BEFORE_BUILD: 'git submodule foreach git checkout  ${{ env.BUILD_COMMIT }}'
      
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheelhouse
          path: wheelhouse/

  test_wheels_aarch64:
    needs: [build_wheels]
    name: Test ${{ matrix.os }}, Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        python: [cp37-cp37m, cp38-cp38, cp39-cp39, cp310-cp310]
        os: [ubuntu-20.04]
    env:
      PYPI_UPLOAD: true  # true or false
      TESTPYPI_UPLOAD: false
      py: /opt/python/${{ matrix.python }}/bin/python
      pyver: ${{ matrix.python }}
      img: quay.io/pypa/manylinux2014_aarch64

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - uses: docker/setup-qemu-action@v1
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        name: Set up QEMU
      
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: wheelhouse
          path: wheelhouse/

      - name: Test aarch64 wheels
        run: |
          docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            pip install wheelhouse/linearmodels-*${{ env.pyver }}-manylinux_2_17_aarch64.manylinux2014_aarch64.whl && \
            python -c "import linearmodels; linearmodels.test([-n,2,--skip-slow])" && \
            deactivate'
      - name: Upload wheels
        if: always()
        run: source twine-upload.sh
        env:
          TESTPYPI_USERNAME: ${{ secrets.TESTPYPI_USERNAME }}
          TESTPYPI_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
